/* -*- tab-width: 4 -*-
 *
 * Electric(tm) VLSI Design System
 *
 * File: IOOptions.java
 *
 * Copyright (c) 2003 Sun Microsystems and Static Free Software
 *
 * Electric(tm) is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Electric(tm) is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Electric(tm); see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, Mass 02111-1307, USA.
 */
package com.sun.electric.tool.user.dialogs;

import com.sun.electric.database.prototype.PortProto;

import java.util.Iterator;
import javax.swing.JComboBox;
import javax.swing.JList;
import javax.swing.ListSelectionModel;
import javax.swing.DefaultListModel;
import javax.swing.JScrollPane;
import javax.swing.text.Document;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;


/**
 * Class to handle the "IO Options" dialog.
 */
public class IOOptions extends javax.swing.JDialog
{
	/** Creates new form IOOptions */
	public IOOptions(java.awt.Frame parent, boolean modal)
	{
		super(parent, modal);
		setLocation(100, 50);
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    private void initComponents()//GEN-BEGIN:initComponents
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        cif = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        layers = new javax.swing.JScrollPane();
        outputMimicsDisplay = new javax.swing.JCheckBox();
        outputMergesBoxes = new javax.swing.JCheckBox();
        outputInstantiatesTopLevel = new javax.swing.JCheckBox();
        normalizeCoordinates = new javax.swing.JCheckBox();
        inputSquaresWires = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        resolution = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cifLayer = new javax.swing.JTextField();
        resolutionValue = new javax.swing.JTextField();
        gds = new javax.swing.JPanel();
        edif = new javax.swing.JPanel();
        def = new javax.swing.JPanel();
        cdl = new javax.swing.JPanel();
        dxf = new javax.swing.JPanel();
        sue = new javax.swing.JPanel();
        copyright = new javax.swing.JPanel();
        library = new javax.swing.JPanel();
        printing = new javax.swing.JPanel();
        ok = new javax.swing.JButton();
        factorySettings = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setTitle("Create New Export");
        setName("");
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                closeDialog(evt);
            }
        });

        cif.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("CIF Layer:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        cif.add(jLabel1, gridBagConstraints);

        layers.setPreferredSize(new java.awt.Dimension(200, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        cif.add(layers, gridBagConstraints);

        outputMimicsDisplay.setText("Output Mimics Display");
        outputMimicsDisplay.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                outputMimicsDisplayActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        cif.add(outputMimicsDisplay, gridBagConstraints);

        outputMergesBoxes.setText("Output Merges Boxes");
        outputMergesBoxes.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                outputMergesBoxesActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        cif.add(outputMergesBoxes, gridBagConstraints);

        outputInstantiatesTopLevel.setText("Output Instantiates Top Level");
        outputInstantiatesTopLevel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                outputInstantiatesTopLevelActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        cif.add(outputInstantiatesTopLevel, gridBagConstraints);

        normalizeCoordinates.setText("Normalize Coordinates");
        normalizeCoordinates.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                normalizeCoordinatesActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        cif.add(normalizeCoordinates, gridBagConstraints);

        inputSquaresWires.setText("Input Squares Wires");
        inputSquaresWires.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                inputSquaresWiresActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        cif.add(inputSquaresWires, gridBagConstraints);

        jLabel2.setText("(time consuming)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        cif.add(jLabel2, gridBagConstraints);

        resolution.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                resolutionActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        cif.add(resolution, gridBagConstraints);

        jLabel3.setText("Output resolution:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        cif.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        cif.add(cifLayer, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        cif.add(resolutionValue, gridBagConstraints);

        jTabbedPane1.addTab("CIF", cif);

        gds.setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.addTab("GDS", gds);

        edif.setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.addTab("EDIF", edif);

        def.setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.addTab("DEF", def);

        cdl.setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.addTab("CDL", cdl);

        dxf.setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.addTab("DXF", dxf);

        sue.setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.addTab("SUE", sue);

        copyright.setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.addTab("Copyright", copyright);

        library.setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.addTab("Library", library);

        printing.setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.addTab("Printing", printing);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        ok.setText("OK");
        ok.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                okActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 40);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        getContentPane().add(ok, gridBagConstraints);

        factorySettings.setText("Factory Settings");
        factorySettings.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                factorySettingsActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.weightx = 0.5;
        getContentPane().add(factorySettings, gridBagConstraints);

        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                CancelActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 40, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(Cancel, gridBagConstraints);

        pack();
    }//GEN-END:initComponents

	private void resolutionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_resolutionActionPerformed
	{//GEN-HEADEREND:event_resolutionActionPerformed
		// Add your handling code here:
	}//GEN-LAST:event_resolutionActionPerformed

	private void inputSquaresWiresActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_inputSquaresWiresActionPerformed
	{//GEN-HEADEREND:event_inputSquaresWiresActionPerformed
		// Add your handling code here:
	}//GEN-LAST:event_inputSquaresWiresActionPerformed

	private void normalizeCoordinatesActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_normalizeCoordinatesActionPerformed
	{//GEN-HEADEREND:event_normalizeCoordinatesActionPerformed
		// Add your handling code here:
	}//GEN-LAST:event_normalizeCoordinatesActionPerformed

	private void outputInstantiatesTopLevelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_outputInstantiatesTopLevelActionPerformed
	{//GEN-HEADEREND:event_outputInstantiatesTopLevelActionPerformed
		// Add your handling code here:
	}//GEN-LAST:event_outputInstantiatesTopLevelActionPerformed

	private void outputMergesBoxesActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_outputMergesBoxesActionPerformed
	{//GEN-HEADEREND:event_outputMergesBoxesActionPerformed
		// Add your handling code here:
	}//GEN-LAST:event_outputMergesBoxesActionPerformed

	private void outputMimicsDisplayActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_outputMimicsDisplayActionPerformed
	{//GEN-HEADEREND:event_outputMimicsDisplayActionPerformed
		// Add your handling code here:
	}//GEN-LAST:event_outputMimicsDisplayActionPerformed

	private void okActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okActionPerformed
	{//GEN-HEADEREND:event_okActionPerformed
		closeDialog(null);
	}//GEN-LAST:event_okActionPerformed

	private void factorySettingsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_factorySettingsActionPerformed
	{//GEN-HEADEREND:event_factorySettingsActionPerformed
		System.out.println("Can't yet");
	}//GEN-LAST:event_factorySettingsActionPerformed

	private void CancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CancelActionPerformed
	{//GEN-HEADEREND:event_CancelActionPerformed
		closeDialog(null);
	}//GEN-LAST:event_CancelActionPerformed
	
	/** Closes the dialog */
	private void closeDialog(java.awt.event.WindowEvent evt)//GEN-FIRST:event_closeDialog
	{
		setVisible(false);
		dispose();
	}//GEN-LAST:event_closeDialog

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel;
    private javax.swing.JPanel cdl;
    private javax.swing.JPanel cif;
    private javax.swing.JTextField cifLayer;
    private javax.swing.JPanel copyright;
    private javax.swing.JPanel def;
    private javax.swing.JPanel dxf;
    private javax.swing.JPanel edif;
    private javax.swing.JButton factorySettings;
    private javax.swing.JPanel gds;
    private javax.swing.JCheckBox inputSquaresWires;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JScrollPane layers;
    private javax.swing.JPanel library;
    private javax.swing.JCheckBox normalizeCoordinates;
    private javax.swing.JButton ok;
    private javax.swing.JCheckBox outputInstantiatesTopLevel;
    private javax.swing.JCheckBox outputMergesBoxes;
    private javax.swing.JCheckBox outputMimicsDisplay;
    private javax.swing.JPanel printing;
    private javax.swing.JComboBox resolution;
    private javax.swing.JTextField resolutionValue;
    private javax.swing.JPanel sue;
    // End of variables declaration//GEN-END:variables
	
}
