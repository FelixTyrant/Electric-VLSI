/*
 * GateLayGenTab.java
 *
 * Created on March 3, 2006, 10:39 AM
 */

package com.sun.electric.tool.user.dialogs.projsettings;

import com.sun.electric.tool.generator.layout.Tech;
import com.sun.electric.database.hierarchy.Library;
import com.sun.electric.tool.generator.layout.GateLayoutGenerator;
import com.sun.electric.tool.generator.layout.GateLayGenSettings;
import com.sun.electric.tool.generator.layout.LayoutLib;
import com.sun.electric.tool.generator.layout.StdCellParams;
import java.awt.GridBagConstraints;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.BasicStroke;
import java.awt.Font;
import java.awt.Color;
import java.io.*;

import javax.swing.JPanel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;

/**
 *
 * @author  ac147373
 */
public class GateLayGenTab extends ProjSettingsPanel {
	public static final long serialVersionUID=0;
    java.awt.Frame parent;
    
    //private JPanel paintinv;
    
    /** Creates new form Layout_Gen */
    public GateLayGenTab(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parent = parent;
        initComponents();
        initializeFields();
    }
    
    void initializeFields() {
        techCombo.setSelectedItem(GateLayGenSettings.getFoundry());
        
        String str = GateLayGenSettings.getEnableNCC();
        if(str==null) {
            libLabel.setEnabled(false);
            libCombo.setEnabled(false);
        } else {
            libLabel.setEnabled(true);
            libCombo.setSelectedItem(str);
        }
        
        quantText.setText(String.valueOf(GateLayGenSettings.getSizeQuantizationError()));
        mosWidthText.setText(String.valueOf(GateLayGenSettings.getMaxMosWidth()));
        vddyText.setText(String.valueOf(GateLayGenSettings.getVddY()));
        gndyText.setText(String.valueOf(GateLayGenSettings.getGndY()));
        nmoswellText.setText(String.valueOf(GateLayGenSettings.getNmosWellHeight()));
        pmoswellText.setText(String.valueOf(GateLayGenSettings.getPmosWellHeight()));
        simpleNameCheck.setSelected(GateLayGenSettings.getSimpleName());
    }
    
    /** return the panel to use for this preferences tab. */
    @Override
    public JPanel getPanel() {return (JPanel) getContentPane();}
    
    /** return the name of this preferences tab. */
    @Override
    public String getName() {return "Gate Layout Generator";}
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        techLabel = new javax.swing.JLabel();
        techCombo = new javax.swing.JComboBox();
        nccCheck = new javax.swing.JCheckBox();
        nccCheck.setSelected(true);
        libLabel = new javax.swing.JLabel();
        libCombo = new javax.swing.JComboBox();
        help1 = new javax.swing.JButton();
        quantLabel = new javax.swing.JLabel();
        quantText = new javax.swing.JTextField();
        maxMosLabel = new javax.swing.JLabel();
        help2 = new javax.swing.JButton();
        mosWidthText = new javax.swing.JTextField();
        help3 = new javax.swing.JButton();
        vddyLabel = new javax.swing.JLabel();
        vddyText = new javax.swing.JTextField();
        help4 = new javax.swing.JButton();
        gndyLabel = new javax.swing.JLabel();
        gndyText = new javax.swing.JTextField();
        help5 = new javax.swing.JButton();
        nmoswellLabel = new javax.swing.JLabel();
        nmoswellText = new javax.swing.JTextField();
        help6 = new javax.swing.JButton();
        pmoswellLabel = new javax.swing.JLabel();
        pmoswellText = new javax.swing.JTextField();
        help7 = new javax.swing.JButton();
        simpleNameCheck = new javax.swing.JCheckBox();
        help8 = new javax.swing.JButton();
        reset = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setForeground(java.awt.Color.white);
        techLabel.setText("Technology");
        techLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 50);
        getContentPane().add(techLabel, gridBagConstraints);

        techCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MOCMOS", "TSMC90", "TSMC180" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        getContentPane().add(techCombo, gridBagConstraints);

        nccCheck.setText("Enable NCC");
        nccCheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        nccCheck.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        nccCheck.setMargin(new java.awt.Insets(0, 0, 0, 0));
        nccCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nccCheckActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 50);
        getContentPane().add(nccCheck, gridBagConstraints);

        libLabel.setText("Reference Library");
        libLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 50);
        getContentPane().add(libLabel, gridBagConstraints);

        libCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PurpleFour", "RedFour" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        getContentPane().add(libCombo, gridBagConstraints);

        help1.setText("?");
        help1.setToolTipText("Updates global Auto. Layout Gen. settings");
        help1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        help1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        help1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 10);
        getContentPane().add(help1, gridBagConstraints);

        quantLabel.setText("Quantization Error");
        quantLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 50);
        getContentPane().add(quantLabel, gridBagConstraints);

        quantText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quantText.setMinimumSize(new java.awt.Dimension(5, 19));
        quantText.setPreferredSize(new java.awt.Dimension(50, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        getContentPane().add(quantText, gridBagConstraints);

        maxMosLabel.setText("Maximum MOS Width");
        maxMosLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 50);
        getContentPane().add(maxMosLabel, gridBagConstraints);

        help2.setText("?");
        help2.setToolTipText("Updates global Auto. Layout Gen. settings");
        help2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        help2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        help2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
        getContentPane().add(help2, gridBagConstraints);

        mosWidthText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mosWidthText.setMinimumSize(new java.awt.Dimension(5, 19));
        mosWidthText.setPreferredSize(new java.awt.Dimension(50, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        getContentPane().add(mosWidthText, gridBagConstraints);

        help3.setText("?");
        help3.setToolTipText("Updates global Auto. Layout Gen. settings");
        help3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        help3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        help3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
        getContentPane().add(help3, gridBagConstraints);

        vddyLabel.setText("Vdd Y Coordinate");
        vddyLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 50);
        getContentPane().add(vddyLabel, gridBagConstraints);

        vddyText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vddyText.setMinimumSize(new java.awt.Dimension(5, 5));
        vddyText.setPreferredSize(new java.awt.Dimension(50, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        getContentPane().add(vddyText, gridBagConstraints);

        help4.setText("?");
        help4.setToolTipText("Updates global Auto. Layout Gen. settings");
        help4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        help4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        help4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
        getContentPane().add(help4, gridBagConstraints);

        gndyLabel.setText("Gnd Y Corodinate");
        gndyLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 50);
        getContentPane().add(gndyLabel, gridBagConstraints);

        gndyText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gndyText.setMinimumSize(new java.awt.Dimension(5, 19));
        gndyText.setPreferredSize(new java.awt.Dimension(50, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        getContentPane().add(gndyText, gridBagConstraints);

        help5.setText("?");
        help5.setToolTipText("Updates global Auto. Layout Gen. settings");
        help5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        help5.setMargin(new java.awt.Insets(0, 0, 0, 0));
        help5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help5ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
        getContentPane().add(help5, gridBagConstraints);

        nmoswellLabel.setText("NMOS Well Height");
        nmoswellLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 50);
        getContentPane().add(nmoswellLabel, gridBagConstraints);

        nmoswellText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nmoswellText.setMinimumSize(new java.awt.Dimension(5, 19));
        nmoswellText.setPreferredSize(new java.awt.Dimension(50, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        getContentPane().add(nmoswellText, gridBagConstraints);

        help6.setText("?");
        help6.setToolTipText("Updates global Auto. Layout Gen. settings");
        help6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        help6.setMargin(new java.awt.Insets(0, 0, 0, 0));
        help6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help6ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
        getContentPane().add(help6, gridBagConstraints);

        pmoswellLabel.setText("PMOS Well Height");
        pmoswellLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 50);
        getContentPane().add(pmoswellLabel, gridBagConstraints);

        pmoswellText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pmoswellText.setMinimumSize(new java.awt.Dimension(5, 19));
        pmoswellText.setPreferredSize(new java.awt.Dimension(50, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        getContentPane().add(pmoswellText, gridBagConstraints);

        help7.setText("?");
        help7.setToolTipText("Updates global Auto. Layout Gen. settings");
        help7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        help7.setMargin(new java.awt.Insets(0, 0, 0, 0));
        help7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help7ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
        getContentPane().add(help7, gridBagConstraints);

        simpleNameCheck.setText("Simple Name");
        simpleNameCheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        simpleNameCheck.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        simpleNameCheck.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 50);
        getContentPane().add(simpleNameCheck, gridBagConstraints);

        help8.setText("?");
        help8.setToolTipText("Updates global Auto. Layout Gen. settings");
        help8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        help8.setMargin(new java.awt.Insets(0, 0, 0, 0));
        help8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help8ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
        getContentPane().add(help8, gridBagConstraints);

        reset.setText("Reset");
        reset.setToolTipText("Updates global Auto. Layout Gen. settings");
        reset.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        getContentPane().add(reset, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void help8ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_help8ActionPerformed
    {//GEN-HEADEREND:event_help8ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_help8ActionPerformed

    private void help7ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_help7ActionPerformed
    {//GEN-HEADEREND:event_help7ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_help7ActionPerformed

    private void help6ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_help6ActionPerformed
    {//GEN-HEADEREND:event_help6ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_help6ActionPerformed

    private void help5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_help5ActionPerformed
    {//GEN-HEADEREND:event_help5ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_help5ActionPerformed

    private void help1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_help1ActionPerformed
    {//GEN-HEADEREND:event_help1ActionPerformed
       JOptionPane.showMessageDialog(parent, "check Enable NCC and select a library. After generating layout, NCC uses this library as a reference");
    }//GEN-LAST:event_help1ActionPerformed

    private void help2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_help2ActionPerformed
    {//GEN-HEADEREND:event_help2ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_help2ActionPerformed

    private void help3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_help3ActionPerformed
    {//GEN-HEADEREND:event_help3ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_help3ActionPerformed

    private void help4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_help4ActionPerformed
    {//GEN-HEADEREND:event_help4ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_help4ActionPerformed
    
    private void resetActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_resetActionPerformed
    {//GEN-HEADEREND:event_resetActionPerformed
    	initializeFields();
//        techCombo.setSelectedIndex(0);
//        nccCheck.setSelected(false);
//        libLabel.setEnabled(false);
//        libCombo.setEnabled(false);
//        quantText.setText("0");
//        mosWidthText.setText("1000");
//        vddyText.setText("21");
//        gndyText.setText("-21");
//        nmoswellText.setText("84");
//        pmoswellText.setText("84");
//        simpleNameCheck.setSelected(false);
    }//GEN-LAST:event_resetActionPerformed
    
    
    private class EmptyFieldException extends Exception {
    	public static final long serialVersionUID = 0;
        String error = new String();
        
        EmptyFieldException(String error) {
            super();
            this.error = error;
        }
    }
    
    /** Method called when the "OK" panel is hit.
     * Updates any changed fields in the Layout Generation tab. */
    @Override
    public void term() {
        if(!fieldsAreValid()) return;

        String storedFoundry = GateLayGenSettings.getFoundry();
    	String newFoundry = (String)techCombo.getSelectedItem();
    	if (!storedFoundry.equals(newFoundry))
    		GateLayGenSettings.setFoundry(newFoundry);

        String storedNccCheck = GateLayGenSettings.getEnableNCC();
        String newNccCheck = nccCheck.isSelected() ?
        		(String)libCombo.getSelectedItem() : "";
        if (!storedNccCheck.equals(newNccCheck))
            GateLayGenSettings.setEnableNCC(newNccCheck);
        
        int storedSizeQuant = GateLayGenSettings.getSizeQuantizationError();
        int newSizeQuant = Integer.parseInt(quantText.getText());
        if (storedSizeQuant!=newSizeQuant) 
        	GateLayGenSettings.setSizeQuantizationError(newSizeQuant);
        
        int storedMaxMosWid = GateLayGenSettings.getMaxMosWidth();
        int newMaxMosWid = Integer.parseInt(mosWidthText.getText());
        if (storedMaxMosWid!=newMaxMosWid) 
        	GateLayGenSettings.setMaxMosWidth(newMaxMosWid);
        
        int storedVddY = GateLayGenSettings.getVddY();
        int newVddY = Integer.parseInt(vddyText.getText());
        if (storedVddY!=newVddY) GateLayGenSettings.setVddY(newVddY);
        
        int storedGndY = GateLayGenSettings.getGndY();
        int newGndY = Integer.parseInt(gndyText.getText());
        if (storedGndY!=newGndY) GateLayGenSettings.setGndY(newGndY);
        
        int storedPmosWellHeight = GateLayGenSettings.getPmosWellHeight();
        int newPmosWellHeight = Integer.parseInt((pmoswellText.getText()));
        if (storedPmosWellHeight!=newPmosWellHeight) 
        	GateLayGenSettings.setPmosWellHeight(newPmosWellHeight);
        
        int storedNmosWellHeight = GateLayGenSettings.getNmosWellHeight();
        int newNmosWellHeight = Integer.parseInt(nmoswellText.getText());
        if (storedNmosWellHeight!=newNmosWellHeight) 
        	GateLayGenSettings.setNmosWellHeight(newNmosWellHeight);
        
        boolean storedSimpleName = GateLayGenSettings.getSimpleName();
        boolean newSimpleName = simpleNameCheck.isSelected();
        if (storedSimpleName!=newSimpleName)
        	GateLayGenSettings.setSimpleName(newSimpleName);
    }
    
    private boolean fieldsAreValid() {
        String param = new String();
        //String errorField = new String();
        
        try {
            //REFERENCE LIBRARY
            if(nccCheck.isSelected()) {
                param = (String)libCombo.getSelectedItem();
                if(param.equals(""))
                    throw new EmptyFieldException("Library Reference");
            }
            
            //QUANTIZATION ERROR
            param = quantText.getText();
            if(param.equals(""))
                throw new EmptyFieldException("Quantization Error");
            
            //MAX. MOS WIDTH
            param = mosWidthText.getText();
            if(param.equals(""))
                throw new EmptyFieldException("Maximum MOS Width");
            
            //VDD Y COORDINATE
            param = vddyText.getText();
            if(param.equals(""))
                throw new EmptyFieldException("VDD Y Coordinate");
            
            //Gnd Y Coordinate
            param = gndyText.getText();
            if(param.equals(""))
                throw new EmptyFieldException("Gnd Y Coordinate");
            
            //NMOS Well Height
            param = nmoswellText.getText();
            if(param.equals(""))
                throw new EmptyFieldException("NMOS Well Height");
            
            //PMOS Well Height
            param = pmoswellText.getText();
            if(param.equals(""))
                throw new EmptyFieldException("PMOS Well Height");
            
            //Set Simple Name
            //boolean paramBl = simpleNameCheck.isSelected();
        }
        
        catch(EmptyFieldException e) {
            JOptionPane.showMessageDialog(parent, "Cannot leave " + e.error + " blank!");
            return false;
        }
        
        catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(parent, "Non-numeric value entered in a numeric field!");
            return false;
        }
        
        return true;
    }
        
    private void nccCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nccCheckActionPerformed
// TODO add your handling code here:
        boolean check = nccCheck.isSelected();
        
        libLabel.setEnabled(check);
        libCombo.setEnabled(check);
        
    }//GEN-LAST:event_nccCheckActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new GateLayGenTab(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel gndyLabel;
    private javax.swing.JTextField gndyText;
    private javax.swing.JButton help1;
    private javax.swing.JButton help2;
    private javax.swing.JButton help3;
    private javax.swing.JButton help4;
    private javax.swing.JButton help5;
    private javax.swing.JButton help6;
    private javax.swing.JButton help7;
    private javax.swing.JButton help8;
    private javax.swing.JComboBox libCombo;
    private javax.swing.JLabel libLabel;
    private javax.swing.JLabel maxMosLabel;
    private javax.swing.JTextField mosWidthText;
    private javax.swing.JCheckBox nccCheck;
    private javax.swing.JLabel nmoswellLabel;
    private javax.swing.JTextField nmoswellText;
    private javax.swing.JLabel pmoswellLabel;
    private javax.swing.JTextField pmoswellText;
    private javax.swing.JLabel quantLabel;
    private javax.swing.JTextField quantText;
    private javax.swing.JButton reset;
    private javax.swing.JCheckBox simpleNameCheck;
    private javax.swing.JComboBox techCombo;
    private javax.swing.JLabel techLabel;
    private javax.swing.JLabel vddyLabel;
    private javax.swing.JTextField vddyText;
    // End of variables declaration//GEN-END:variables
    
    /** Closes the dialog */
//    private void closeDialog(java.awt.event.WindowEvent evt)
//    {
//        setVisible(false);
//        dispose();
//    }
    
}


