/*
 * J3DColorOptions.java
 *
 * Created on February 18, 2005, 2:30 PM
 */

package com.sun.electric.plugins.j3d;

import com.sun.electric.database.geometry.EGraphics;
import com.sun.electric.database.text.TextUtils;
import com.sun.electric.tool.user.dialogs.ColorPatternPanel;

import javax.media.j3d.TransparencyAttributes;
import java.util.HashMap;
import java.util.Iterator;

/**
 *
 * @author  Gilda
 */
public class J3DColorOptions extends javax.swing.JPanel
{
    private static final HashMap modeMap = new HashMap(5);

    // Filling the data
    static {
        J3DTransparencyOption option = new J3DTransparencyOption(TransparencyAttributes.FASTEST, "FASTEST");
        modeMap.put(option, option);
        option = new J3DTransparencyOption(TransparencyAttributes.NICEST, "NICEST");
        modeMap.put(option, option);
        option = new J3DTransparencyOption(TransparencyAttributes.BLENDED, "BLENDED");
        modeMap.put(option, option);
        option = new J3DTransparencyOption(TransparencyAttributes.SCREEN_DOOR, "SCREEN_DOOR");
        modeMap.put(option, option);
        option = new J3DTransparencyOption(TransparencyAttributes.NONE, "NONE");
        modeMap.put(option, option);
    }
    private static class J3DTransparencyOption
    {
        int mode;
        String name;
        J3DTransparencyOption(int mode, String name)
        {
            this.mode = mode;
            this.name = name;
        }
        public String toString() {return name;}
        // Careful with toString
        /**
         * Overwriting original function to use mode integer values
         * for hash numbers
         * @return
         */
        public int hashCode() {return mode;}
    }

    /** Creates new form J3DColorOptions */
    public J3DColorOptions() {
        initComponents();
    }

    public static void set3DGraphicsData(javax.swing.JPanel jOption, ColorPatternPanel.Info info)
    {
        if (!(jOption instanceof J3DColorOptions)) return;
        J3DColorOptions option = (J3DColorOptions)jOption;

        // Setting dialog with data
        for (Iterator it = modeMap.keySet().iterator(); it.hasNext();)
        {
            J3DTransparencyOption op = (J3DTransparencyOption)it.next();
            option.transparencyMode.addItem(op);
            if (op.mode == info.transMode)
                option.transparencyMode.setSelectedItem(op);

        }
        // default factor is Zero
        option.transparancyField.setText(Float.toString(info.transMode));
    }

    /**
     * Method to update 3D graphics data from GUI
     * @param jOption
     * @param info
     */
    public static void update3DGraphicsData(javax.swing.JPanel jOption, ColorPatternPanel.Info info)
    {
        if (!(jOption instanceof J3DColorOptions)) return;
        J3DColorOptions option = (J3DColorOptions)jOption;
        // Create JAppearance if does not exist
        JAppearance ap = JAppearance.getAppearance(info.graphics.getLayer());

        ap.transparencyFactor = (float)TextUtils.atof(option.transparancyField.getText());
        J3DTransparencyOption op = (J3DTransparencyOption)option.transparencyMode.getSelectedItem();
        ap.transparencyMode = op.mode;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        transparencyMode = new javax.swing.JComboBox();
        transparancyField = new javax.swing.JTextField();
        transparencyLabel = new javax.swing.JLabel();
        transparencyModeLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        setBorder(new javax.swing.border.TitledBorder("3D Transparency Options"));
        transparencyMode.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(transparencyMode, gridBagConstraints);

        transparancyField.setMinimumSize(new java.awt.Dimension(20, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(transparancyField, gridBagConstraints);

        transparencyLabel.setText("Factor:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(transparencyLabel, gridBagConstraints);

        transparencyModeLabel.setText("Mode:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(transparencyModeLabel, gridBagConstraints);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField transparancyField;
    private javax.swing.JLabel transparencyLabel;
    private javax.swing.JComboBox transparencyMode;
    private javax.swing.JLabel transparencyModeLabel;
    // End of variables declaration//GEN-END:variables
    
}
