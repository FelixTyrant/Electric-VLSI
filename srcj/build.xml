<?xml version="1.0" encoding="UTF-8"?>

<!-- -*- tab-width: 4 -*-  -->

<!-- Electric(tm) VLSI Design System -->

<!-- File: build.xml -->

<!-- Copyright (c) 2005 Sun Microsystems and Static Free Software -->

<!-- Electric(tm) is free software; you can redistribute it and/or modify -->
<!-- it under the terms of the GNU General Public License as published by -->
<!-- the Free Software Foundation; either version 2 of the License, or -->
<!-- (at your option) any later version. -->

<!-- Electric(tm) is distributed in the hope that it will be useful, -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the -->
<!-- GNU General Public License for more details. -->

<!-- You should have received a copy of the GNU General Public License -->
<!-- along with Electric(tm); see the file COPYING.  If not, write to -->
<!-- the Free Software Foundation, Inc., 59 Temple Place, Suite 330, -->
<!-- Boston, Mass 02111-1307, USA. -->

<project basedir="." default="jar" name="electric">

    <target name="init" description="Initialization">
        <property name="beanshell" value="packaging/bsh-2.0b2.jar"/>
        <property name="AppleJava" value="packaging/AppleJavaExtensions.jar"/>
	    <property name="JUnit" value="packaging/junit.jar"/>
    </target>

	<!-- Use -DGNU=true for GNU release -->
	<!-- Use -Dsource=true to release the source  -->
    <!-- Use -DJMF=true to include JMF plugin -->
    <target name="compile" depends="init" description="Compile">
        <javac debug="true" deprecation="true" destdir="." srcdir="."
	    fork="true" memoryMaximumSize="256m">
	    <!--compilerarg value="-Xlint:unchecked"/-->
            <classpath><pathelement location="${beanshell}"/></classpath>
            <classpath><pathelement location="${AppleJava}"/></classpath>
            <exclude name="intervalsimulation/"/>  
            <exclude name="com/sun/electric/plugins/JMF/*.*" unless="JMF"/>
	        <exclude name="com/sun/electric/plugins/j3d/*.*" if="NO3D"/>
            <exclude name="com/sun/electric/plugins/j3d/ui/*.*" if="NO3D"/>
            <exclude name="com/sun/electric/plugins/j3d/utils/*.*" if="NO3D"/>
            <!-- you don't include either Java3D plugin if 3D option is out -->
            <!-- this is valid when Java3D is not installed -->
            <exclude name="com/sun/electric/plugins/Java3D/*.*" if="NO3D"/>
        </javac>
    </target>

    <target name="compileToBin" depends="init" description="Compile to 'bin' directory">
        <javac debug="true" deprecation="true" destdir="bin" srcdir="."
            source="1.4" fork="true" memoryMaximumSize="256m">
            <classpath><pathelement location="${beanshell}"/></classpath>
            <classpath><pathelement location="${AppleJava}"/></classpath>
            <exclude name="intervalsimulation/"/>
        </javac>
        <copy todir="bin/com">
            <fileset dir="com">
                <include name="**/*.bsh"/>
                <include name="**/*.gif"/>
                <include name="**/*.html"/>
                <include name="**/*.jelib"/>
                <include name="**/*.png"/>
                <include name="**/*.prm"/>
                <include name="**/*.txt"/>
                <include name="**/*.wav"/>
            </fileset>
        </copy>
    </target>

    <target name="runFromBin" depends="init,compileToBin" description="Run from 'bin' directory">
        <java classname="com.sun.electric.Launcher" failonerror="true"
            fork="true" maxmemory="1024m">
            <classpath>
                <pathelement location="bin"/>
                <pathelement location="${beanshell}"/>
                <pathelement location="${AppleJava}"/>
           </classpath>
           <arg value="-debug"/>
        </java>
    </target>

    <target name="runMain" depends="init,compile" description="Run the Main class">
        <java classname="com.sun.electric.Main" failonerror="true" fork="true" maxmemory="1024m">
	    <jvmarg value="-enableassertions"/>
            <classpath>
                <pathelement location="."/>
                <pathelement location="${beanshell}"/>
                <pathelement location="${AppleJava}"/>
           </classpath>
            <arg value="-debug"/>
        </java>
    </target>

	<!-- Not able to put if condition inside unjar -->
	<target name="unjarBsh" unless="GNU">
        <unjar dest="." src="${beanshell}"/>
	</target>

	<target name="jarForGNUBinary" description="Make binary Jar file for GNU">
	    <antcall target="jarWithVersion">
	        <param name="GNU" value="1"/>
	    </antcall>
	</target>

	<target name="jarForGNUSource" description="Make source Jar file for GNU">
	    <antcall target="jarWithVersion">
	        <param name="GNU" value="1"/>
	        <param name="source" value="1"/>
	    </antcall>
	</target>

	<target name="jarForIRSIM" depends="init,compile" description="Make source Jar file for IRSIM">
        <java classname="com.sun.electric.Main" failonerror="true" fork="true" outputproperty="version">
        	<arg value="-v"/>
        </java>
        <jar basedir="." compress="true" jarfile="electricIRSIM-${version}.jar">
        	<include name="com/sun/electric/plugins/irsim/*.*"/>
        </jar>
        <delete quiet="true">
            <fileset dir="com">
                <include name="**/*.class"/>
            </fileset>
        </delete>
	</target>

    <target name="jarForJava3D" depends="init,compile" description="Make source Jar file for Java3D plugin">
        <java classname="com.sun.electric.Main" failonerror="true" fork="true" outputproperty="version">
        	<arg value="-v"/>
        </java>
        <jar basedir="." compress="true" jarfile="electricJava3D-${version}.jar">
        	<include name="com/sun/electric/plugins/Java3D/*.*"/>
        </jar>
        <delete quiet="true">
            <fileset dir="com">
                <include name="**/*.class"/>
            </fileset>
        </delete>
	</target>

    <target name="jarForJMF" depends="init" description="Make source Jar file for JMF plugin">
        <antcall target="compile">
	        <param name="JMF" value="1"/>
	    </antcall>
        <java classname="com.sun.electric.Main" failonerror="true" fork="true" outputproperty="version">
        	<arg value="-v"/>
        </java>
        <jar basedir="." compress="true" jarfile="electricJMF-${version}.jar">
        	<include name="com/sun/electric/plugins/JMF/*.*"/>
        </jar>
        <delete quiet="true">
            <fileset dir="com">
                <include name="**/*.class"/>
            </fileset>
        </delete>
	</target>

	<target name="jarWithVersion" depends="init,compile" description="Make Jar file with version">
        <java classname="com.sun.electric.Main" failonerror="true" fork="true" outputproperty="version">
        	<arg value="-v"/>
        </java>
	    <antcall target="unjarBsh"></antcall>
        <delete dir="META-INF"/>
        <copy file="packaging/electric.mf" tofile="electric.mf"/>
        <copy file="packaging/LicenseGNU.txt" tofile="COPYING.txt"/>
        <jar basedir="." compress="true" jarfile="electric-${version}.jar" manifest="electric.mf">
            <exclude name="apidoc/"/>
            <exclude name="bin/"/>
        	<exclude name="intervalsimulation/"/>
            <exclude name="nbproject/"/>
            <exclude name="packaging/*.jar"/>
            <exclude name="packaging/*.gif"/>
            <exclude name="packaging/MakePDF.book"/>
            <exclude name="xml/"/>
            <exclude name="build.xml" unless="source"/>
            <exclude name="ChangeLog.txt" unless="source"/>
            <exclude name="electric-${version}.jar"/>
            <exclude name="electric.mf"/>
            <exclude name="Hack_stack.txt"/>
	        <exclude name="com/sun/electric/plugins/calibre/*.*" if="GNU"/>
        	<exclude name="com/sun/electric/plugins/irsim/*.*" if="GNU"/>
        	<exclude name="com/sun/electric/plugins/menus/*.*" if="GNU"/>
        	<exclude name="com/sun/electric/plugins/skill/*.*" if="GNU"/>
            <exclude name="com/sun/electric/plugins/tsmc/*.*" if="GNU"/>
            <exclude name="com/sun/electric/plugins/tsmc/fill90nm/*.*" if="GNU"/>
            <exclude name="com/sun/electric/plugins/tsmc/gates90nm/*.*" if="GNU"/>
            <exclude name="com/sun/electric/plugins/JMF/*.*" unless="JMF"/>
            <exclude name="com/sun/electric/plugins/Java3D/*.*" unless="Java3D"/>
            <exclude name="**/*.java" unless="source"/>
            <exclude name="**/*.form" unless="source"/>
            <exclude name="classes/" unless="source"/>
        </jar>
        <delete file="electric.mf"/>
        <delete file="COPYING.txt"/>
        <delete dir="bsh"/>
        <delete quiet="true">
            <fileset dir="com">
                <include name="**/*.class"/>
            </fileset>
        </delete>
	    <!-- Don't move this property definition up -->
        <property name="version" value=""/>
    </target>

    <target name="jar" depends="init,compile" description="Make binary Jar file">
	    <antcall target="unjarBsh"></antcall>
        <unjar dest="." src="${AppleJava}"/>
        <delete dir="META-INF"/>
        <copy file="packaging/electric.mf" tofile="electric.mf"/>
        <jar basedir="." compress="true" jarfile="electric.jar" manifest="electric.mf">
            <exclude name="apidoc/"/>
            <exclude name="bin/"/>
            <exclude name="intervalsimulation/"/>
            <exclude name="packaging/"/>
            <exclude name="build.xml" unless="source"/>
            <exclude name="ChangeLog.txt" unless="source"/>
            <exclude name="electric*.jar"/>
            <exclude name="electric.mf"/>
	        <exclude name="com/sun/electric/plugins/calibre/*.*" if="GNU"/>
	        <exclude name="com/sun/electric/plugins/irsim/*.*" if="GNU"/>
	        <exclude name="com/sun/electric/plugins/skill/*.*" if="GNU"/>
            <exclude name="com/sun/electric/plugins/tsmc/*.*" if="GNU"/>
            <exclude name="com/sun/electric/plugins/tsmc/fill90nm/*.*" if="GNU"/>
            <exclude name="com/sun/electric/plugins/tsmc/gates90nm/*.*" if="GNU"/>
	        <exclude name="com/sun/electric/plugins/j3d/*.*" if="NO3D"/>
            <exclude name="com/sun/electric/plugins/j3d/ui/*.*" if="NO3D"/>
            <exclude name="com/sun/electric/plugins/j3d/utils/*.*" if="NO3D"/>
            <exclude name="com/sun/electric/plugins/JMF/*.*" unless="JMF"/>
            <exclude name="**/*.java" unless="source"/>
            <exclude name="**/*.form" unless="source"/>
            <exclude name="classes/" unless="source"/>
        </jar>
        <delete file="electric.mf"/>
        <delete dir="bsh"/>
        <delete dir="com/apple"/>
        <delete quiet="true">
            <fileset dir="com">
                <include name="**/*.class"/>
            </fileset>
        </delete>
    </target>

    <target name="mac-app" description="Build Macintosh Application">
<!--        <java classpath="." classname="com.sun.electric.Main" fork="true" outputproperty="version">-->
<!--        	<arg value="-v"/>-->
<!--        </java>-->
        <java jar="electric.jar" fork="true" outputproperty="version">
        	<arg value="-v"/>
            <jvmarg value="-Xmx1000m"/>
        </java>
        <property name="releasedir" value="Release${version}"/>
        <property name="appdir" value="${releasedir}/Electric.app"/>
        <mkdir dir="${releasedir}"/>
        <mkdir dir="${appdir}"/>
        <mkdir dir="${appdir}/Contents"/>
        <mkdir dir="${appdir}/Contents/MacOS"/>
        <mkdir dir="${appdir}/Contents/Resources"/>
        <mkdir dir="${appdir}/Contents/Resources/Java"/>
        <copy file="/System/Library/Frameworks/JavaVM.framework/Versions/Current/Resources/MacOS/JavaApplicationStub" todir="${appdir}/Contents/MacOS"/>
        <chmod file="${appdir}/Contents/MacOS/JavaApplicationStub" perm="755"/>
        <copy file="packaging/Info.plist" todir="${appdir}/Contents"/>
        <copy file="packaging/PkgInfo" todir="${appdir}/Contents"/>
        <copy file="packaging/electric.icns" todir="${appdir}/Contents/Resources"/>
        <copy file="electric.jar" todir="${appdir}/Contents/Resources/Java"/>
        <exec executable="/Developer/Tools/SetFile">
            <arg value="-a"/> <arg value="B" /> <arg value="${appdir}" />
        </exec>
        <exec executable="packaging/mkdmg.sh">
            <arg value="Electric${version}"/> <arg value="${releasedir}" />
        </exec>
    </target>

    <target name="javadoc" depends="init" description="Create Javadoc">
        <mkdir dir="apidoc"/>
        <javadoc destdir="apidoc" private="false" use="true" source="1.5" maxmemory="400m">
        	<packageset dir=".">
        		<include name="com/sun/electric/**"/>
        		<exclude name="com/sun/electric/plugins/**"/>
        	</packageset>
            <classpath>
                <pathelement location="${beanshell}"/>
                <pathelement location="${AppleJava}"/>
            </classpath>
            <sourcepath>
                <pathelement location="."/>
            </sourcepath>
        </javadoc>
    </target>

    <target name="clean" depends="init" description="Clean all build products">
        <delete quiet="true">
            <fileset dir=".">
                <include name="**/*.class"/>
            </fileset>
        </delete>
        <delete quiet="false" file="electric*.jar"/>
        <delete dir="apidoc"/>
        <delete dir="bin/com"/>
        <delete file="electric.mf"/>
        <delete dir="bsh"/>
        <delete dir="com/apple"/>
    </target>

</project>
